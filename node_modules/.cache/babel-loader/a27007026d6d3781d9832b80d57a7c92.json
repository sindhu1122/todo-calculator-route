{"ast":null,"code":"var _jsxFileName = \"/home/mohitha/route/src/Todo/Todo.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './Todo.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: '',\n      taskList: []\n    };\n\n    this.inputChangeHandler = input => {\n      this.setState({\n        task: input\n      });\n    };\n\n    this.btnAddHandler = inputTask => {\n      let item = {\n        value: inputTask,\n        done: false,\n        edit: false\n      };\n      let newList = [...this.state.taskList, item];\n      this.setState({\n        taskList: newList,\n        task: ''\n      });\n    };\n\n    this.btnDeleteHandler = itemIndex => {\n      this.state.taskList.splice(itemIndex, 1);\n      this.setState({\n        taskList: this.state.taskList\n      });\n    };\n\n    this.btnDoneHandler = itemIndex => {\n      let newList = this.state.taskList.map((todo, index) => {\n        if (index === itemIndex) {\n          return { ...todo,\n            done: true\n          };\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        taskList: newList\n      });\n    };\n\n    this.editHandler = (itemIndex, boolean) => {\n      let newList = this.state.taskList.map((todo, index) => {\n        if (index === itemIndex) {\n          return { ...todo,\n            edit: true\n          };\n        } else {\n          return todo;\n        }\n      });\n      this.setState({\n        taskList: newList\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"To Do App\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"inputTask\",\n      placeholder: \"Add your task\",\n      onChange: event => this.inputChangeHandler(event.target.value),\n      value: this.state.task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"btn1\",\n      type: \"submit\",\n      className: \"submitBtn\",\n      onClick: () => this.btnAddHandler(this.state.task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.taskList.map((todo, index) => React.createElement(\"div\", {\n      id: \"body\",\n      style: {\n        textDecoration: this.state.taskList[index].done ? 'line-through' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      contentEditable: this.state.taskList[index].edit ? \"true\" : \"false\",\n      style: {\n        width: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", todo.value, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"i1\",\n      className: \"outputBtns\",\n      onClick: () => this.btnDoneHandler(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Done\"), React.createElement(\"button\", {\n      id: \"i2\",\n      className: \"outputBtns\",\n      onClick: event => this.editHandler(index, true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Edit\"), React.createElement(\"button\", {\n      id: \"i3\",\n      className: \"outputBtns\",\n      onClick: event => this.btnDeleteHandler(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Delete\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mohitha/route/src/Todo/Todo.js"],"names":["React","Component","App","state","task","taskList","inputChangeHandler","input","setState","btnAddHandler","inputTask","item","value","done","edit","newList","btnDeleteHandler","itemIndex","splice","btnDoneHandler","map","todo","index","editHandler","boolean","render","event","target","textDecoration","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './Todo.css';\nclass App extends Component {\n  state={\n    task:'',\n    taskList:[],\n  };\n  inputChangeHandler = (input)=>{\n      this.setState({\n        task: input\n      });\n  }\n  btnAddHandler = (inputTask)=>{\n    let item = {\n      value: inputTask,\n      done: false,\n      edit: false\n    }\n    let newList = [\n      ...this.state.taskList,\n      item\n    ]\n    this.setState({\n      taskList:newList,\n      task: ''\n    })\n  }\n  btnDeleteHandler = (itemIndex) =>{\n    this.state.taskList.splice(itemIndex, 1);\n    this.setState({taskList: this.state.taskList});\n  }\n  btnDoneHandler = (itemIndex) =>{\n    let newList = this.state.taskList.map((todo, index) => {\n      if(index === itemIndex) {\n        return {\n          ...todo,\n          done: true\n        }\n      } else {\n        return todo\n      }\n    })\n    this.setState({\n        taskList : newList,\n    })\n   \n  }\n  editHandler = (itemIndex, boolean) => {\n   \n    let newList = this.state.taskList.map((todo, index) => {\n      if(index === itemIndex) {\n        return {\n          ...todo,\n          edit: true\n        }\n      } else {\n        return todo\n      }\n    })\n    this.setState({\n        taskList : newList,\n    })\n  }\n  render() {\n    \n    return (\n      <div className=\"App\">\n          <div id=\"head\">\n          <h1 className=\"App-title\">To Do App</h1>\n            <input\n                type=\"text\"\n                className=\"inputTask\"\n                placeholder=\"Add your task\"\n                onChange={(event) => this.inputChangeHandler(event.target.value)}\n                value ={this.state.task}\n                />\n            <button id=\"btn1\"\n                type=\"submit\"\n                className=\"submitBtn\"\n                onClick={()=> this.btnAddHandler(this.state.task)} >Add</button>\n            </div>\n            <div>\n              {this.state.taskList.map((todo,index) =>\n              <div id=\"body\"\n                    style={{textDecoration: this.state.taskList[index].done ? 'line-through' : 'none', }}>\n                <div contentEditable= {this.state.taskList[index].edit ? \"true\" : \"false\"}\n                    style={{width:'300px'}}> {todo.value} </div>\n                <div >\n                <button id=\"i1\"\n                      className=\"outputBtns\"\n                      onClick={() => this.btnDoneHandler(index)} > Done</button>\n                 <button id=\"i2\"\n                      className=\"outputBtns\"\n                      onClick={(event) => this.editHandler(index, true)}> Edit</button>\n                <button id=\"i3\"\n                      className=\"outputBtns\"\n                      onClick={(event) => this.btnDeleteHandler(index)} >Delete</button>\n                    </div>\n               </div>)}\n            </div>\n          </div>\n    );\n  }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}